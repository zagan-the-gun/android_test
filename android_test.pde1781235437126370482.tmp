Mogura mog0 = new Mogura(100,100);
Mogura mog1 = new Mogura(300,300);
TitleView startButton = new TitleView("Start", width/2, height/2, 150, 40, 18);
TitleView optionButton = new TitleView("Option", width/2, height/2 + 80, 150, 40, 18);
TitleView quitButton = new TitleView("Quit", width/2, height/2 + 160, 150, 40, 18);
OptionView argumentSlide = new OptionView(150, 40, 28);
TitleView optionOkButton = new TitleView("Ok", width/2, height/2, 80, 40, 18);
TitleView optionCancelButton = new TitleView("Cancel", width/2, height/2, 80, 40, 18);


int gameFlag = 0;
int score = 0;
int mogura;
int damage = 0;

PImage imgR;

void setup() {
  //frameRate(100);
  //size(400, 600, JAVA2D);
  //size(400, 600, P2D);  
  size(400, 600, FX2D);
  //size(400, 600);
  //size(1280, 720);
  //size(720, 1280);
  //fullScreen();
  //colorMode(RGB,256);

  background(255);
  //frameRate(1);

  startButton.setCoordinate(width/2, height/2);
  startButton.setFillColor(255, 255, 255, 255);
  startButton.setStrokeColor(0, 0, 0, 255);
  startButton.setFontColor(0, 0, 0, 255);

  optionButton.setCoordinate(width/2, height/2 + 80);
  optionButton.setFillColor(255, 255, 255, 255);
  optionButton.setStrokeColor(0, 0, 0, 255);
  optionButton.setFontColor(0, 0, 0, 255);

  quitButton.setCoordinate(width/2, height/2 + 160);
  quitButton.setFillColor(255, 255, 255, 255);
  quitButton.setStrokeColor(0, 0, 0, 255);
  quitButton.setFontColor(0, 0, 0, 255);

  mog0.setFillColor(0, 0, 0, 255);
  mog0.setStrokeColor(0, 0, 0, 255);

  mog1.setFillColor(0, 0, 0, 255);
  mog1.setStrokeColor(0, 0, 0, 255);

  mogura = argumentSlide.getConfig();
  argumentSlide.setCoordinate(width/2, height/2);
  argumentSlide.setFillColor(255, 255, 255, 255);
  argumentSlide.setStrokeColor(0, 0, 0, 255);
  argumentSlide.setFontColor(0, 0, 0, 255);

  optionOkButton.setCoordinate(width - 150, height - 50);
  optionOkButton.setFillColor(255, 255, 255, 255);
  optionOkButton.setStrokeColor(0, 0, 0, 255);
  optionOkButton.setFontColor(0, 0, 0, 255);

  optionCancelButton.setCoordinate(width - 50, height - 50);
  optionCancelButton.setFillColor(255, 255, 255, 255);
  optionCancelButton.setStrokeColor(0, 0, 0, 255);
  optionCancelButton.setFontColor(0, 0, 0, 255);

}

void draw() {
  background(255);

  if(gameFlag == 1){

    if(mog0.getStatus() == 1) {
      mog0.ellipse_draw();
      mog0.strokeSizeAttenuator();
    } else if(mog0.getStatus() == 0 && random(0,100) <= 10) {
      //println("round(random(0,1)): " + round(random(0,1)));
      mog0.setCoordinate(random(0,width),random(0,height));
      mog0.setStatus(1);
    }

    if(mog1.getStatus() == 1) {
      mog1.ellipse_draw();
      mog1.strokeSizeAttenuator();
    } else if(mog1.getStatus() == 0 && random(0,100) <= 10) {
      mog1.setCoordinate(random(0,width),random(0,height));
      mog1.setStatus(1);
    }

  int offset = 0;
  // damage effect

  loadPixels();
  imgR.loadPixels();
  //for (int y = 0; y < height; y ++) {
  //   for (int x = 0; x < width; x ++) {
//// suna arasi
  //     //pixels[offset ++] = Math.random() >= 0.5 ?
  //     //0xff000000 : 0xffffffff;

  //     int index = y * width + x;
  //     int pixel = pixels[index];
  //     float r = red(pixel);
  //     float g = green(pixel);
  //     float b = blue(pixel);

  //     float adjustBrightness = 7;

  //     r *= adjustBrightness;
  //     g *= adjustBrightness;
  //     b *= adjustBrightness;

  //     r = constrain(r, 0, 255);
  //     g = constrain(g, 0, 255);
  //     b = constrain(b, 0, 255);

  //     pixels[index] = color(r, g, b);

  //   }
  // }
  image(imgR, random(-10, 10), 0);
  updatePixels();

  if(damage > 5){
    // damage effect
    loadPixels();

    stroke(0, 255, 255, 0);
    strokeWeight(1);
    line(0, 0, width, height);
    line(0, height, width, 0);
    ////mozaic
    for(int j = 0; j < height; j+=(damage+10)) {  
      for(int i = 0; i < width; i+=(damage+10)) {  
        color c = pixels[j * width + i];
        fill(c);
        rect(i, j, (damage+5), (damage+5));
      }
    }
  }

  } else if(gameFlag == 0) {
    stroke(0, 0, 0, 255);
    strokeWeight(1);
    line(0, 0, width, height);
    line(0, height, width, 0);
    startButton.menu_draw();
    optionButton.menu_draw();
    quitButton.menu_draw();

  } else if(gameFlag == 2) {
    argumentSlide.optionDraw();
    optionOkButton.menu_draw();
    optionCancelButton.menu_draw();
  }

  delay(50);
}

void mousePressed(){

  if(gameFlag == 0){
    if(startButton.hit_check(mouseX, mouseY)) {
      gameFlag = 1;
    } else if(optionButton.hit_check(mouseX, mouseY)){
      gameFlag = 2;
    } else if(quitButton.hit_check(mouseX, mouseY)){
      exit();
    }
  } else if(gameFlag == 1) {
    mog0.hit_check(mouseX, mouseY);
    mog1.hit_check(mouseX, mouseY);

  } else if(gameFlag == 2) {
    if(optionOkButton.hit_check(mouseX, mouseY)) {
      argumentSlide.setConfig();
      gameFlag = 0;
    } else if(optionCancelButton.hit_check(mouseX, mouseY)){
      gameFlag = 0;
    }
  }
}

void mouseDragged(){
  if(gameFlag == 2){
    argumentSlide.drugGaugePos(mouseX, mouseY);
  }
}

void displayImage(PImage pict) {
  int alp = 80;

  tint(255, 0, 0, alp);
  image(pict, random(-10, 10), 0);
  tint(0, 255, 0, alp);
  image(pict, random(-10, 10), 0);
  tint(0, 0, 255, alp);
  image(pict, random(-10, 10), 0);
}